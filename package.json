{
  "name": "eweitz-kaavio",
  "version": "5.0.1",
  "description": "Diagram viewer and editor for biological pathways.",
  "main": "es5/index.js",
  "module": "esnext/index.js",
  "jsnext:main": "esnext/index.js",
  "typings": "esnext/index",
  "engines": {
    "node": ">=10.0.0"
  },
  "files": [
    "bin",
    "es5",
    "esnext",
    "src",
    "dist",
    "yarn.lock",
    "webpack.*.config.js"
  ],
  "bin": "./bin/kaavio",
  "scripts": {
    "build": "rm -rf dist/ es5/ esnext/ && npm-run-all -s build:css -p build:assets -s build:ts",
    "build:assets": "npm-run-all -p build:assets:*",
    "build:assets:es5": "rsync -a --delete --include='*.json' --include='*.svg' --include='*.css' --include='*.css.d.ts' --include='*/' --exclude='*' src/ es5/",
    "build:assets:esnext": "rsync -a --delete --include='*.json' --include='*.svg' --include='*.css' --include='*.css.d.ts' --include='*/' --exclude='*' src/ esnext/",
    "build:css": "tcm src",
    "build:ts": "npm-run-all -p build:ts:*",
    "build-disabled:ts:dist": "webpack --config webpack.dist.config.js",
    "build:ts:es5": "tsc --project tsconfig.es5.json",
    "build:ts:esnext": "tsc --project tsconfig.esnext.json",
    "convert": "for f in ./test/inputs/*.json; do base_path=`echo \"$f\" | sed s/.json//` && cat \"$f\" | node test/dummy-cli.js | bin/sha1sumup -c \"$base_path.svg.sha1sum\" || (echo '' && echo \"Checksum failed for $base_path.svg. Checking whether kaavio convert it without throwing an error...\" && cat \"$f\" | node test/dummy-cli.js >/dev/null && echo '' && echo \"  Kaavio was able to convert $base_path.svg without throwing an error, but you still need to find out why the checksums do not match.\" && echo '') || (echo '' && echo \"  Kaavio throws an error when converting $base_path.svg.\" && exit 1) || break; done",
    "expected": "for f in ./test/inputs/*.json; do base_path=`echo \"$f\" | sed s/.json//` && echo \"Converting $f to SVG and generating checksum...\" && cat \"$f\" | node test/dummy-cli.js | tee \"$base_path.svg\" | bin/sha1sumup > \"$base_path.svg.sha1sum\" || break; done",
    "postinstall-TODO-should-we-keep-this": "npm run bundle && npm dedupe",
    "prepare-broken": "npm run bundle && npm run build:dist:node && ./bin/kaavio bundle --build false edges && ./bin/kaavio bundle --build false filters && ./bin/kaavio bundle defs --build false && ./bin/kaavio bundle markers --build false && npm run build && npm run test && npm run expected",
    "prepare-disabled": "npm run bundle && npm run build:dist:node && ./bin/kaavio bundle --build false edges && ./bin/kaavio bundle --build false filters && ./bin/kaavio bundle defs --build false && ./bin/kaavio bundle markers --build false && npm run build",
    "prepare": "ALLE_DIR='../../../'; if [ ! -d ./node_modules ] && [ -d $ALLE_DIR/node_modules ]; then echo 'Alle configuration detected. Testing from the top-level alle directory...' && (cd $ALLE_DIR && npm run 'kaavio:build'); else npm run build; fi",
    "prepublishOnly": "npm i --package-lock-only && ALLE_DIR='../../../' && if [ ! -d ./node_modules ] && [ -d $ALLE_DIR/node_modules ]; then echo 'Alle configuration detected. Testing from the top-level alle directory...' && (cd $ALLE_DIR && npm run 'kaavio:test'); else npm run test; fi",
    "postpublish": "TAG=\"$(jq -r .version package.json)\" && git commit -am \"Bump to version $TAG\" && git tag -a $TAG -m \"Published version $TAG\" && git push origin $TAG",
    "serve": "webpack-dev-server --config webpack.dev.config.js --open --progress --inline",
    "start": "npm run serve",
    "testBuild": "echo 'testBuild requires rsync and the gpml2pvjson NPM package' && npm run build:ts:es5 && ./bin/kaavio bundle ./test/dummy-themes/silly.json && tsc --jsx react ./test/dummy-themes/silly/theme.tsx && rsync -rIl --existing ../gpml2pvjson-js/test/expected/ test/inputs/",
    "run-one-conversion": "cat test/inputs/data-nodes.json | node test/dummy-cli.js",
    "run-one-sha1sum": "cat test/inputs/data-nodes.json | node test/dummy-cli.js | bin/sha1sumup",
    "run-one-sha1sum-check": "cat test/inputs/data-nodes.json | node test/dummy-cli.js | bin/sha1sumup -c ./test/expected/data-nodes.svg.sha1sum",
    "test": "echo 'get in-browser tests working' && npm-run-all --silent -p test:*",
    "test:checksums": "for f in ./test/inputs/*.json; do base_path=`echo \"$f\" | sed s/.json//` && cat \"$f\" | node test/dummy-cli.js | bin/sha1sumup -c \"$base_path.svg.sha1sum\" || (echo '' && echo \"Kaavio throws an error when converting $base_path.svg.\" && exit 1) || break; done",
    "test-broken:jest": "echo 'Get the jest test(s) working (again-ish).' && jest",
    "test-broken:e2e": "npm run serve && npm run serve:bundle",
    "watch-old": "rm -rf ./es5 ./dist ./esnext && npm-run-all -s build:assets -p watch:*",
    "watch": "rm -rf es5/ esnext/ && npm-run-all -s build:css -p build:assets -s build:ts -p watch:*",
    "watch:browser": "webpack-dev-server --config webpack.dev.config.js --open --progress --inline",
    "watch:css": "tcm src --watch",
    "watch:assets": "onchange 'src/**' -- npm-run-all build:assets",
    "watch:es5": "tsc --project tsconfig.es5.json --watch",
    "watch:esnext": "tsc --project tsconfig.esnext.json --watch",
    "watch:testBuild": "npm-run-all -p watch:testBuild:*",
    "watch:testBuild:bundle": "onchange './test/dummy-themes/**/*.json' './test/dummy-themes/**/*.svg' -- ./bin/kaavio bundle ./test/dummy-themes/silly.json",
    "watch-disabled:testBuild:ts": "tsc --jsx react ./test/dummy-themes/silly/theme.tsx --watch",
    "watch:testBuild:css": "tcm test/dummy-themes/ --watch"
  },
  "browser": {
    "commander": false
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/wikipathways/kaavio.git"
  },
  "keywords": [
    "kaavio",
    "network",
    "diagram"
  ],
  "author": "WikiPathways team",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/wikipathways/kaavio/issues"
  },
  "homepage": "https://wikipathways.github.io/kaavio/docs/",
  "dependencies": {
    "collit": "^1.0.1",
    "color-interpolate": "^1.0.5",
    "commander": "^2.20.3",
    "csx": "^8.5.0",
    "direction": "^1.0.3",
    "fast-levenshtein": "^2.0.6",
    "fs-extra": "^4.0.3",
    "getit": "^1.2.0",
    "highland": "^2.13.5",
    "is-valid-var-name": "^1.0.2",
    "js-base64": "^2.5.1",
    "json-stringify-safe": "^5.0.1",
    "lodash": "^4.17.15",
    "ndjson": "^1.5.0",
    "opentype-layout": "^1.1.0",
    "opentype.js": "^1.1.0",
    "os-fonts": "^0.5.0",
    "point-at-length": "^1.1.0",
    "prettier": "^1.18.2",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "read-pkg-up": "^3.0.0",
    "relative-luminance": "2.0.1",
    "roboto-fontface": "^0.10.0",
    "rx-extra": "2.1.4",
    "rxjs": "^5.5.12",
    "style-loader": "^1.0.0",
    "svg-pan-zoom": "3.6.1",
    "svg-points": "^6.0.1",
    "svgo": "^1.3.1",
    "typestyle": "^0.22.3",
    "url-regex": "^4.1.1",
    "valid-data-url": "^2.0.0",
    "verror": "^1.10.0",
    "word-wrappr": "^1.0.3",
    "xmldom": "^0.1.27",
    "xpath": "^0.0.27",
    "xpath.js": "^1.1.0"
  },
  "devDependencies": {
    "@types/jest": "^25.1.5",
    "@types/js-base64": "^2.3.1",
    "@types/node": "^10.17.0",
    "@types/react": "^16.9.3",
    "@types/react-dom": "^16.9.3",
    "JSONStream": "^1.3.5",
    "autoprefixer": "^9.7.0",
    "babel-core": "^6.26.3",
    "babel-loader": "^7.1.5",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "enzyme": "^3.10.0",
    "enzyme-to-json": "^3.4.3",
    "expose-loader": "^0.7.5",
    "jest": "^24.9.0",
    "mini-css-extract-plugin": "^0.8.0",
    "npm-run-all": "^4.1.5",
    "onchange": "^6.1.0",
    "postcss-loader": "^3.0.0",
    "precss": "^4.0.0",
    "react-test-renderer": "^16.11.0",
    "source-map-loader": "^0.2.4",
    "source-map-support": "^0.5.16",
    "string-replace-webpack-plugin": "^0.1.3",
    "to-string-loader": "^1.1.5",
    "ts-loader": "^6.2.2",
    "typed-css-modules": "^0.6.3",
    "typescript": "^3.8.3",
    "uglifyjs-webpack-plugin": "^2.2.0",
    "webpack": "^4.41.2",
    "webpack-cli": "^3.3.9",
    "webpack-dev-server": "^3.9.0",
    "webpack-hot-middleware": "^2.25.0"
  },
  "semverBumper": {
    "jsonFiles": [
      {
        "filepath": "package.json",
        "key": "version"
      }
    ],
    "grepOptions": {
      "include": [],
      "exclude": [
        ".git",
        "jsdoc-conf.json",
        "npm-debug.log"
      ],
      "excludeDir": [
        "./docs",
        "./test",
        "./bower_components",
        "./es5",
        "./esnext",
        "./demo",
        "./dist"
      ]
    }
  }
}
